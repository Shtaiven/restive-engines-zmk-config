/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 * Modified for shockboard by Steven Eisinger
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    combos {
        compatible = "zmk,combos";

        LEFT_PAREN_COMBO {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <28 16>;
            layers = <0>;
        };

        LEFT_BRACKET_COMBO {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <27 15>;
            layers = <0>;
        };

        LEFT_BRACE_COMBO {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <26 14>;
            layers = <0>;
        };

        RIGHT_PAREN_COMBO {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <19 31>;
            layers = <0>;
        };

        RIGHT_BRACKET_COMBO {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <20 32>;
            layers = <0>;
        };

        RIGHT_BRACE_COMBO {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <21 33>;
            layers = <0>;
        };

        PLUS_COMBO {
            bindings = <&kp PLUS>;
            key-positions = <33 32>;
            layers = <0>;
        };

        MINUS_COMBO {
            bindings = <&kp MINUS>;
            key-positions = <26 27>;
            layers = <0>;
        };

        UNDERSCORE_COMBO {
            bindings = <&kp UNDERSCORE>;
            key-positions = <28 27>;
            layers = <0>;
        };

        EQUAL_COMBO {
            bindings = <&kp EQUAL>;
            key-positions = <31 32>;
            layers = <0>;
        };

        CAPS_COMBO {
            bindings = <&kp CAPSLOCK>;
            key-positions = <48 49>;
            layers = <0>;
        };
    };

    behaviors {
        caps_tap_dance: caps_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "Double tap shift for caps lock";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPSLOCK>;

            tapping-term-ms = <500>;
        };

        pht_left: pht_left {
            compatible = "zmk,behavior-hold-tap";
            label = "Positional holdt tap left";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            quick-tap-ms = <200>;
            flavor = "tap-unless-interrupted";
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 41 42 43 44 45>;
        };

        pht_right: pht_right {
            compatible = "zmk,behavior-hold-tap";
            label = "Positional hold tap right";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            quick-tap-ms = <200>;
            flavor = "tap-unless-interrupted";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40>;
        };

        mo_tog: mo_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "Momentary layer on hold, toggle on tap";
            bindings = <&mo>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7   |  8  |  9  |  0  |  BKSP |
            // |  TAB  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |   '   |
            // | CTRL  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  ENT  |
            //         |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
            //                     | GUI | SPC | LWR |   | RSE | SHFT | ALT |

            bindings = <
&kp TILDE   &kp N1                &kp N2  &kp N3                &kp N4                    &kp N5          &kp N6                     &kp N7                     &kp N8                 &kp N9   &kp N0                    &key_repeat
&kp TAB     &kp Q                 &kp W   &kp E                 &kp R                     &kp T           &kp Y                      &kp U                      &kp I                  &kp O    &kp P                     &kp BACKSLASH
&kp ESCAPE  &pht_left LEFT_GUI A  &kp S   &pht_left LEFT_ALT D  &pht_left LEFT_CONTROL F  &kp G           &kp H                      &pht_right LEFT_CONTROL J  &pht_right LEFT_ALT K  &kp L    &pht_right LEFT_GUI SEMI  &kp SINGLE_QUOTE
            &kp Z                 &kp X   &kp C                 &kp V                     &kp B           &kp N                      &kp M                      &kp COMMA              &kp DOT  &kp FSLH
                                          &mo_tog 2 2           &lt 1 SPACE               &kp LEFT_SHIFT  &mt RIGHT_SHIFT BACKSPACE  &lt 3 ENTER                &kp DELETE
            >;
        };

        nav_layer {
            // -----------------------------------------------------------------------------------------
            // |  F12 | F1  | F2  | F3  | F4  | F5  |   |  F6 | F7   | F8  | F9  | F10  |  F11 |
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7   |  8  |  9  |   0  |      |
            // | CTRL | BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN  |  UP | RGT |      |      |
            //        |     |     |     |     |BTCLR|   |     |      |     |     |      |      |
            //                    | GUI | SPC |     |   |     | SHFT | ALT |

            bindings = <
&kp F12  &kp F1        &kp F2        &kp F3         &kp F4            &kp F5  &kp F6    &kp F7         &kp F8    &kp F9       &kp F10          &kp F11
&none    &none         &none         &none          &kp LEFT_SHIFT    &none   &none     &kp PAGE_DOWN  &kp UP    &kp PAGE_UP  &kp PRINTSCREEN  &none
&none    &kp LEFT_GUI  &none         &kp LEFT_ALT   &kp LEFT_CONTROL  &none   &kp HOME  &kp LEFT       &kp DOWN  &kp RIGHT    &kp END          &kp INSERT
         &none         &kp C_AC_CUT  &kp C_AC_COPY  &kp C_AC_PASTE    &none   &none     &none          &none     &none        &none
                                     &trans         &trans            &trans  &trans    &trans         &trans
            >;
        };

        mouse_layer {
            bindings = <
&none  &none         &none         &none          &none             &none   &none      &none      &none      &none  &none  &none
&none  &none         &none         &none          &kp LEFT_SHIFT    &none   &none      &none      &none      &none  &none  &none
&none  &kp LEFT_GUI  &none         &kp LEFT_ALT   &kp LEFT_CONTROL  &none   &none      &none      &none      &none  &none  &none
       &none         &kp C_AC_CUT  &kp C_AC_COPY  &kp C_AC_PASTE    &none   &none      &none      &none      &none  &none
                                   &trans         &trans            &trans  &mkp MCLK  &mkp LCLK  &mkp RCLK
            >;
        };

        num_layer {
            // -----------------------------------------------------------------------------------------
            // |  F12 | F1  | F2  | F3  | F4  | F5  |   |  F6  | F7   | F8  | F9  | F10 | F11 |
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |   ^  |  &   |  *  |  (  |  )  |  `  |
            // | CTRL |     |     |     |     |     |   |   -  |  =   |  [  |  ]  |  \  |  ~  |
            //        |     |     |     |     |     |   |   _  |  +   |  {  |  }  | "|" |
            //                    | GUI | SPC |     |   |      | SHFT | ALT |

            bindings = <
&kp F12     &kp F1           &kp F2           &kp F3           &kp F4           &kp F5           &kp F6          &kp F7            &kp F8        &kp F9  &kp F10       &kp F11
&kp TAB     &kp KP_DIVIDE    &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_MULTIPLY  &none           &kp LEFT_SHIFT    &none         &none   &none         &none
&kp KP_DOT  &kp KP_NUMBER_0  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS      &kp KP_NUMLOCK  &kp LEFT_CONTROL  &kp LEFT_ALT  &none   &kp LEFT_GUI  &none
            &kp COMMA        &kp KP_NUMBER_1  &kp KP_N2        &kp KP_NUMBER_3  &kp KP_MINUS     &none           &none             &none         &none   &none
                                              &kp BACKSPACE    &trans           &kp ENTER        &trans          &trans            &trans
            >;
        };

        function_layer {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2          &bt BT_SEL 3          &bt BT_SEL 4  &bootloader  &none           &none               &none             &none  &soft_off
&none       &none         &none         &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &none         &none        &kp C_REWIND    &kp C_FAST_FORWARD  &none             &none  &none
&none       &none         &kp C_MUTE    &kp C_VOLUME_DOWN     &kp C_VOLUME_UP       &none         &none        &kp C_PREVIOUS  &kp C_NEXT          &kp C_PLAY_PAUSE  &none  &none
            &none         &none         &none                 &none                 &none         &none        &none           &none               &none             &none
                                        &none                 &trans                &none         &none        &trans          &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        function_layer_condition {
            if-layers = <1 3>;
            then-layer = <4>;
        };
    };
};
